#!/bin/bash

# These variables are replaced at drone build
mode=@MODE@
repo=@REPO@
commit=@COMMIT@

function sendToSlack {
    local channel=$1
    local msg=$2
    local color=$3

    curl \
        -X POST \
        -H 'Content-type: application/json' \
        --data "{\"channel\": \"${channel}\", \"attachments\": [{\"pretext\": \"*${REALM_VERSION}*\", \"text\": \"${msg}\", \"color\": \"${color}\", \"mrkdwn_in\": [\"pretext\", \"text\"]}]}" \
        "https://hooks.slack.com/services/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"
}

function runWorldserver {
    # Increase allowed file descriptors
    ulimit -n 4096

    if [ "$mode" == "testing" ]; then
        # for options see https://github.com/google/sanitizers/wiki/AddressSanitizerFlags#run-time-flags
        export ASAN_OPTIONS=abort_on_error=1:detect_leaks=0:symbolize=1
        export ASAN_SYMBOLIZER_PATH=$(which llvm-symbolizer-3.5)

        worldserver_RelWithDebInfoAsan 2> /tmp/backtrace.log
    elif [ "$mode" == "cross" ]; then
        gdb -batch -x=/usr/local/etc/commands.gdb worldserver_cross_RelWithDebInfo
    else
        gdb -batch -x=/usr/local/etc/commands.gdb worldserver_RelWithDebInfo
    fi
}

function analyseCrash {
    local crashlog_filename="crashdump_$(date +\%Y-\%m-\%d-\%H-\%M-\%S).log"
    local crashlog_link="$HOST_ADDR/logs_42x/$REALM_NAME/crashlogs/$crashlog_filename"

    if [ "$mode" == "testing" ]; then
        # cleanup backtrace.log to get only asan output
        csplit --prefix=/tmp/backtrace-split.log --quiet /tmp/backtrace.log "/================/+1"; mv -f /tmp/backtrace-split.log01 /tmp/backtrace.log

        local crash_location=$(grep -m 1 -P 'in.*src\/server' /tmp/backtrace.log)
        local crash_in=$(echo $crash_location | grep -oP 'in \K(.*)(?= )')
        local crash_at=$(echo $crash_location | grep -oP ' /.*/\K(.*)')
    else
        local crash_location=$(grep -m 1 -P 'in .* at' /tmp/backtrace.log)
        local crash_in=$(echo $crash_location | grep -oP 'in \K(.*)(?= at)')
        local crash_at=$(echo $crash_location | grep -oP 'at /.*/\K(.*)')
    fi

    sendToSlack "#jarvis-crash"  "_${REALM_NAME}_ (<https://github.com/$repo/commit/$commit|${commit:0:7}>) crashed in \`$crash_in\` at \`$crash_at\` <$crashlog_link|Show more...>" "danger"
    sendToSlack "#jarvis" "_${REALM_NAME}_ crashed." "danger"

    # Only if it's a crash we made the log avalaible
    cp /tmp/backtrace.log /usr/local/var/log/firestorm/crashlogs/$crashlog_filename
}

function isCrash {
    echo $(grep -m1 -icP 'SIGABRT|SIGSEGV|ERROR: AddressSanitizer' /tmp/backtrace.log)
}

function isShutdown {
    local exit_code=$1

    if [ $exit_code -eq 0 -o $(grep -m1 -ic 'exited with code 02' /tmp/backtrace.log) -eq 1 ]; then
        echo 1
    else
        echo 0
    fi
}

function isReboot {
    local exit_code=$1

    if [ $exit_code -eq 2 -o $(grep -m1 -ic 'exited normally' /tmp/backtrace.log) -eq 1 ]; then
        echo 1
    else
        echo 0
    fi
}

function isKilled {
    local exit_code=$1

    if [ $exit_code -eq 137 -o $(grep -m1 -icP 'SIGTERM|SIGINT' /tmp/backtrace.log) -eq 1 ]; then
        echo 1
    else
        echo 0
    fi
}

###### MAIN ######

runWorldserver
worldserver_exit_code=$?

if [ "$(isCrash)" -eq 1 ]; then
    analyseCrash
elif [ "$(isShutdown $worldserver_exit_code)" -eq 1 ]; then
    sendToSlack "#jarvis" "_${REALM_NAME}_ has been shut down." "good"
elif [ "$(isReboot $worldserver_exit_code)" -eq 1 ]; then
    sendToSlack "#jarvis" "_${REALM_NAME}_ has been rebooted." "good"
elif [ "$(isKilled $worldserver_exit_code)" -eq 1 ]; then
    sendToSlack "#jarvis" "_${REALM_NAME}_ has been killed." "danger"
fi
